// Из мешка с поровну перемешаннымичёрными и белыми шарами достают не глядя один шар
// и кладут его в ящик. После этого в ящик добавляют белый шар, перемешивают и наугад достают один из них.
//  Он оказывается белым. Какова вероятность, что и второй шар, который остался в ящике, тоже белый?

#include <iostream>
#include <cstdlib>
using namespace std;

int getRandomNumber(int min, int max)
{
    static const double fraction = 1.0 / (static_cast<double>(RAND_MAX) + 1.0); 
 
    return static_cast<int>(rand() * fraction * (max - min + 1) + min);
}

int main(){
	setlocale(LC_ALL, "rus");
	// Так как изначально в корзине одинаковое кол-во шаров, то вероятности будут равны
	// Пусть 0 - черный цвет, 1 - белый
	
	// Нужно отсеять три возможных исхода попадания шаров 
	float one = 0, two = 0, trhee = 0;
	// Первый вариант - дастали черный шар, он сразу не подходит
	// Второй вариант - дастали белый, остался черный
	// Третий вариант - дастали белый, остался белый
	for (int i = 0; i < 100; i++){
		int box[2];
		box[0] = getRandomNumber(0, 1);
		box[1] = 1;
		int number = getRandomNumber(0, 1);
		if (box[number] == 0){
			one++;
		} else if (box[number] == 1 && (box[(number + 1) % 2] == 1)){
			two++;
		} else if (box[number] == 1 && (box[(number + 1) % 2] == 0)){
			trhee++;
		}
		
	}
	printf("Первый вариант: %3.1f \nВторой вариант: %3.1f \nТретий вариант: %3.1f", one, two, trhee);
	// Так как третий вариант нам, то считаем с какой вероятностью в коробке останется белый шар при втором и третьем варианте
 
	printf("\nЗначит веротность данного условия: %3.5f", trhee / two);
	
	

}
